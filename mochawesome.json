{
  "stats": {
    "suites": 6,
    "tests": 46,
    "passes": 46,
    "pending": 0,
    "failures": 0,
    "start": "2022-05-23T21:47:58.762Z",
    "end": "2022-05-23T21:48:57.833Z",
    "duration": 35268,
    "testsRegistered": 46,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "117cc7f3-e79c-4a89-a7a3-f3ab051e5f78",
      "title": "",
      "fullFile": "cypress/integration/test/2_buttons.spec.js",
      "file": "cypress/integration/test/2_buttons.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1e7e1544-f0be-4d00-bf94-990585d6d977",
          "title": "Browser actions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should load books url",
              "fullTitle": "Browser actions should load books url",
              "timedOut": null,
              "duration": 2357,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://books.toscrape.com/index.html', {\n  timeout: 10000\n});\ncy.url().should('include', 'index.html'); //Cypress log\ncy.log('Before reload'); //Browser refresh/reload\ncy.reload();\ncy.log('After reload');",
              "err": {},
              "uuid": "071aa1c1-cee2-47ba-bb51-c309de3f785d",
              "parentUUID": "1e7e1544-f0be-4d00-bf94-990585d6d977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should click on poetry category",
              "fullTitle": "Browser actions should click on poetry category",
              "timedOut": null,
              "duration": 1154,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//targeting an html element\ncy.get('a').contains('Poetry').click();",
              "err": {},
              "uuid": "1d81c163-0a8e-4155-a6c7-0d045c062670",
              "parentUUID": "1e7e1544-f0be-4d00-bf94-990585d6d977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have correct price tag",
              "fullTitle": "Browser actions should have correct price tag",
              "timedOut": null,
              "duration": 79,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//targeting a class\ncy.get('.price_color').contains('┬ú23.88');",
              "err": {},
              "uuid": "c51e0048-58c7-4966-9b5b-b263442aab31",
              "parentUUID": "1e7e1544-f0be-4d00-bf94-990585d6d977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have correct price tag",
              "fullTitle": "Browser actions should have correct price tag",
              "timedOut": null,
              "duration": 55,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//targeting a class\ncy.get('.price_color').contains('┬ú23.88');",
              "err": {},
              "uuid": "dcd3e96b-4fbe-4d75-b538-ca46c6965438",
              "parentUUID": "1e7e1544-f0be-4d00-bf94-990585d6d977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should click on Home",
              "fullTitle": "Browser actions should click on Home",
              "timedOut": null,
              "duration": 548,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//targeting an html element\ncy.get('.breadcrumb > :nth-child(1) > a').click();",
              "err": {},
              "uuid": "f45b69e9-ccc7-4207-b7a1-78baf3bdb424",
              "parentUUID": "1e7e1544-f0be-4d00-bf94-990585d6d977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should click on Travel category",
              "fullTitle": "Browser actions should click on Travel category",
              "timedOut": null,
              "duration": 898,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//targeting an html element\ncy.get('a').contains('Travel').click();\ncy.get('h1').contains('Travel');",
              "err": {},
              "uuid": "274ed060-9cc6-4d1b-a482-2c775c520d9d",
              "parentUUID": "1e7e1544-f0be-4d00-bf94-990585d6d977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display correct number of books",
              "fullTitle": "Browser actions should display correct number of books",
              "timedOut": null,
              "duration": 59,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//targeting a class, use .class_name\ncy.get('.product_pod') //grab its length\n.its('length') //it should equal 11\n.should('eq', 11);",
              "err": {},
              "uuid": "9e454710-4b6f-4dff-a109-157c0386904c",
              "parentUUID": "1e7e1544-f0be-4d00-bf94-990585d6d977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should take a snapshot",
              "fullTitle": "Browser actions should take a snapshot",
              "timedOut": null,
              "duration": 1459,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.screenshot();",
              "err": {},
              "uuid": "0b5a34df-b70a-4a5e-b13e-9a9cde9cd454",
              "parentUUID": "1e7e1544-f0be-4d00-bf94-990585d6d977",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "071aa1c1-cee2-47ba-bb51-c309de3f785d",
            "1d81c163-0a8e-4155-a6c7-0d045c062670",
            "c51e0048-58c7-4966-9b5b-b263442aab31",
            "dcd3e96b-4fbe-4d75-b538-ca46c6965438",
            "f45b69e9-ccc7-4207-b7a1-78baf3bdb424",
            "274ed060-9cc6-4d1b-a482-2c775c520d9d",
            "9e454710-4b6f-4dff-a109-157c0386904c",
            "0b5a34df-b70a-4a5e-b13e-9a9cde9cd454"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6609,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "30283aea-04c6-4c7d-8594-701e10ec7174",
      "title": "",
      "fullFile": "cypress/integration/test/3_inputs.spec.js",
      "file": "cypress/integration/test/3_inputs.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5a5edf12-cdc1-4233-bd0f-c9731ba2019d",
          "title": "Working with inputs",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should load books url",
              "fullTitle": "Working with inputs should load books url",
              "timedOut": null,
              "duration": 947,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://zero.webappsecurity.com/login.html', {\n  timeout: 10000\n});\ncy.url().should('include', 'zero'); //Clear cookies & local storage, cypress automatically clears cookies between tests\ncy.clearCookies({\n  log: true\n});\ncy.clearLocalStorage({\n  log: true\n});",
              "err": {},
              "uuid": "4292184e-fac7-479a-ac69-3d5ea914e908",
              "parentUUID": "5a5edf12-cdc1-4233-bd0f-c9731ba2019d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fill username",
              "fullTitle": "Working with inputs should fill username",
              "timedOut": null,
              "duration": 276,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//targeting an id, use #id_name\n//make sure input is clear, input should be blank\ncy.get('#user_login').clear();\ncy.get('#user_login').type('Moin');",
              "err": {},
              "uuid": "2aa0501d-fd4f-4ea5-b66e-1a2f04060c70",
              "parentUUID": "5a5edf12-cdc1-4233-bd0f-c9731ba2019d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fill password",
              "fullTitle": "Working with inputs should fill password",
              "timedOut": null,
              "duration": 1726,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Variables and Aliases\ncy.get('#user_password').as('pw');\ncy.get('@pw').clear(); //Wait between typing\ncy.get('@pw').type('moin moin moin', {\n  delay: 100\n});",
              "err": {},
              "uuid": "e3c3a9e9-66e8-4218-ae4e-c167a8bec940",
              "parentUUID": "5a5edf12-cdc1-4233-bd0f-c9731ba2019d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit login form",
              "fullTitle": "Working with inputs should submit login form",
              "timedOut": null,
              "duration": 377,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Sign in').click();",
              "err": {},
              "uuid": "d8061d27-36dc-493d-9016-6bf4d959cd32",
              "parentUUID": "5a5edf12-cdc1-4233-bd0f-c9731ba2019d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display error",
              "fullTitle": "Working with inputs should display error",
              "timedOut": null,
              "duration": 32,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.alert-error').should('be.visible');",
              "err": {},
              "uuid": "849c89c0-7eab-4990-8c5d-bac9c803a0f9",
              "parentUUID": "5a5edf12-cdc1-4233-bd0f-c9731ba2019d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display error message",
              "fullTitle": "Working with inputs should display error message",
              "timedOut": null,
              "duration": 60,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.alert-error').should('be.visible').and('contain', 'Login and/or password are wrong.');",
              "err": {},
              "uuid": "4090799e-0191-45c5-8a5d-de9df2401729",
              "parentUUID": "5a5edf12-cdc1-4233-bd0f-c9731ba2019d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should mark checkbox",
              "fullTitle": "Working with inputs should mark checkbox",
              "timedOut": null,
              "duration": 109,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//targeting an attribute, use #id_name\n//make sure input is clear, input should be blank\ncy.get('input[type=\"checkbox\"]').click();",
              "err": {},
              "uuid": "861634ed-4803-488f-8846-7d094c404865",
              "parentUUID": "5a5edf12-cdc1-4233-bd0f-c9731ba2019d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4292184e-fac7-479a-ac69-3d5ea914e908",
            "2aa0501d-fd4f-4ea5-b66e-1a2f04060c70",
            "e3c3a9e9-66e8-4218-ae4e-c167a8bec940",
            "d8061d27-36dc-493d-9016-6bf4d959cd32",
            "849c89c0-7eab-4990-8c5d-bac9c803a0f9",
            "4090799e-0191-45c5-8a5d-de9df2401729",
            "861634ed-4803-488f-8846-7d094c404865"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3527,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ce939e93-0476-4f17-8b43-733f4885594a",
      "title": "",
      "fullFile": "cypress/integration/test/5_fixture.spec.js",
      "file": "cypress/integration/test/5_fixture.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "fc32df19-facb-4a67-9841-53223a85c28e",
          "title": "Fixtures and Keyboard",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should try to login",
              "fullTitle": "Fixtures and Keyboard should try to login",
              "timedOut": null,
              "duration": 1471,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://zero.webappsecurity.com/login.html', {\n  timeout: 10000\n});\ncy.url().should('include', 'zero'); //returns the value of the user json file\ncy.fixture('user').then(user => {\n  const username = user.username;\n  const password = user.password;\n  cy.get('#user_login').clear();\n  cy.get('#user_login').type(username);\n  cy.get('#user_password').clear();\n  cy.get('#user_password').type(password);\n});",
              "err": {},
              "uuid": "c34a6d57-cc23-4538-b968-4259bb7700c8",
              "parentUUID": "fc32df19-facb-4a67-9841-53223a85c28e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should press enter",
              "fullTitle": "Fixtures and Keyboard should press enter",
              "timedOut": null,
              "duration": 1169,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://zero.webappsecurity.com/index.html', {\n  timeout: 10000\n});\ncy.url().should('include', 'index');\ncy.get('#searchTerm').type('Online Banking {enter}');\ncy.contains('Search Results:');",
              "err": {},
              "uuid": "985acad4-6922-43c7-ac4f-dc7fef448940",
              "parentUUID": "fc32df19-facb-4a67-9841-53223a85c28e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c34a6d57-cc23-4538-b968-4259bb7700c8",
            "985acad4-6922-43c7-ac4f-dc7fef448940"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2640,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "80a5d6b5-d90d-4ef0-af79-3f2c2f4e39b1",
      "title": "",
      "fullFile": "cypress/integration/test/actions.spec.js",
      "file": "cypress/integration/test/actions.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3bb78e12-d01e-4bd6-ab69-dcb016abd7e4",
          "title": "Actions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".type() - type into a DOM element",
              "fullTitle": "Actions .type() - type into a DOM element",
              "timedOut": null,
              "duration": 4235,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/type\ncy.get('.action-email').type('fake@email.com').should('have.value', 'fake@email.com') // .type() with special character sequences\n.type('{leftarrow}{rightarrow}{uparrow}{downarrow}').type('{del}{selectall}{backspace}') // .type() with key modifiers\n.type('{alt}{option}') //these are equivalent\n.type('{ctrl}{control}') //these are equivalent\n.type('{meta}{command}{cmd}') //these are equivalent\n.type('{shift}') // Delay each keypress by 0.1 sec\n.type('slow.typing@email.com', {\n  delay: 100\n}).should('have.value', 'slow.typing@email.com');\ncy.get('.action-disabled') // Ignore error checking prior to type\n// like whether the input is visible or disabled\n.type('disabled error checking', {\n  force: true\n}).should('have.value', 'disabled error checking');",
              "err": {},
              "uuid": "bdda0848-8fc2-42ea-b880-c2525573d803",
              "parentUUID": "3bb78e12-d01e-4bd6-ab69-dcb016abd7e4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".focus() - focus on a DOM element",
              "fullTitle": "Actions .focus() - focus on a DOM element",
              "timedOut": null,
              "duration": 194,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/focus\ncy.get('.action-focus').focus().should('have.class', 'focus').prev().should('have.attr', 'style', 'color: orange;');",
              "err": {},
              "uuid": "7593d457-ff9e-4920-b094-7048001e34f0",
              "parentUUID": "3bb78e12-d01e-4bd6-ab69-dcb016abd7e4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".blur() - blur off a DOM element",
              "fullTitle": "Actions .blur() - blur off a DOM element",
              "timedOut": null,
              "duration": 489,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/blur\ncy.get('.action-blur').type('About to blur').blur().should('have.class', 'error').prev().should('have.attr', 'style', 'color: red;');",
              "err": {},
              "uuid": "ee40d750-7dad-4761-8bb1-9d60002864a9",
              "parentUUID": "3bb78e12-d01e-4bd6-ab69-dcb016abd7e4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".clear() - clears an input or textarea element",
              "fullTitle": "Actions .clear() - clears an input or textarea element",
              "timedOut": null,
              "duration": 612,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clear\ncy.get('.action-clear').type('Clear this text').should('have.value', 'Clear this text').clear().should('have.value', '');",
              "err": {},
              "uuid": "c25c11d6-c110-4003-8c29-cf5a45485982",
              "parentUUID": "3bb78e12-d01e-4bd6-ab69-dcb016abd7e4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".submit() - submit a form",
              "fullTitle": "Actions .submit() - submit a form",
              "timedOut": null,
              "duration": 599,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/submit\ncy.get('.action-form').find('[type=\"text\"]').type('HALFOFF');\ncy.get('.action-form').submit().next().should('contain', 'Your form has been submitted!');",
              "err": {},
              "uuid": "60e1c590-c5dc-4966-9ebc-e59914546a02",
              "parentUUID": "3bb78e12-d01e-4bd6-ab69-dcb016abd7e4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".click() - click on a DOM element",
              "fullTitle": "Actions .click() - click on a DOM element",
              "timedOut": null,
              "duration": 2785,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/click\ncy.get('.action-btn').click(); // You can click on 9 specific positions of an element:\n//  -----------------------------------\n// | topLeft        top       topRight |\n// |                                   |\n// |                                   |\n// |                                   |\n// | left          center        right |\n// |                                   |\n// |                                   |\n// |                                   |\n// | bottomLeft   bottom   bottomRight |\n//  -----------------------------------\n// clicking in the center of the element is the default\ncy.get('#action-canvas').click();\ncy.get('#action-canvas').click('topLeft');\ncy.get('#action-canvas').click('top');\ncy.get('#action-canvas').click('topRight');\ncy.get('#action-canvas').click('left');\ncy.get('#action-canvas').click('right');\ncy.get('#action-canvas').click('bottomLeft');\ncy.get('#action-canvas').click('bottom');\ncy.get('#action-canvas').click('bottomRight'); // .click() accepts an x and y coordinate\n// that controls where the click occurs :)\ncy.get('#action-canvas').click(80, 75) // click 80px on x coord and 75px on y coord\n.click(170, 75).click(80, 165).click(100, 185).click(125, 190).click(150, 185).click(170, 165); // click multiple elements by passing multiple: true\ncy.get('.action-labels>.label').click({\n  multiple: true\n}); // Ignore error checking prior to clicking\ncy.get('.action-opacity>.btn').click({\n  force: true\n});",
              "err": {},
              "uuid": "1f2cc6aa-5c41-424d-92d2-ba719c8b8223",
              "parentUUID": "3bb78e12-d01e-4bd6-ab69-dcb016abd7e4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".dblclick() - double click on a DOM element",
              "fullTitle": "Actions .dblclick() - double click on a DOM element",
              "timedOut": null,
              "duration": 317,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/dblclick\n// Our app has a listener on 'dblclick' event in our 'scripts.js'\n// that hides the div and shows an input on double click\ncy.get('.action-div').dblclick().should('not.be.visible');\ncy.get('.action-input-hidden').should('be.visible');",
              "err": {},
              "uuid": "f15f591d-9fb8-4687-9947-0ffb5b5927aa",
              "parentUUID": "3bb78e12-d01e-4bd6-ab69-dcb016abd7e4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".rightclick() - right click on a DOM element",
              "fullTitle": "Actions .rightclick() - right click on a DOM element",
              "timedOut": null,
              "duration": 295,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/rightclick\n// Our app has a listener on 'contextmenu' event in our 'scripts.js'\n// that hides the div and shows an input on right click\ncy.get('.rightclick-action-div').rightclick().should('not.be.visible');\ncy.get('.rightclick-action-input-hidden').should('be.visible');",
              "err": {},
              "uuid": "ac709eaf-c89d-45f6-a7bc-0a3c556be62d",
              "parentUUID": "3bb78e12-d01e-4bd6-ab69-dcb016abd7e4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".check() - check a checkbox or radio element",
              "fullTitle": "Actions .check() - check a checkbox or radio element",
              "timedOut": null,
              "duration": 1200,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/check\n// By default, .check() will check all\n// matching checkbox or radio elements in succession, one after another\ncy.get('.action-checkboxes [type=\"checkbox\"]').not('[disabled]').check().should('be.checked');\ncy.get('.action-radios [type=\"radio\"]').not('[disabled]').check().should('be.checked'); // .check() accepts a value argument\ncy.get('.action-radios [type=\"radio\"]').check('radio1').should('be.checked'); // .check() accepts an array of values\ncy.get('.action-multiple-checkboxes [type=\"checkbox\"]').check(['checkbox1', 'checkbox2']).should('be.checked'); // Ignore error checking prior to checking\ncy.get('.action-checkboxes [disabled]').check({\n  force: true\n}).should('be.checked');\ncy.get('.action-radios [type=\"radio\"]').check('radio3', {\n  force: true\n}).should('be.checked');",
              "err": {},
              "uuid": "98a23252-26fa-49b5-9bbb-223ff1e0067e",
              "parentUUID": "3bb78e12-d01e-4bd6-ab69-dcb016abd7e4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".uncheck() - uncheck a checkbox element",
              "fullTitle": "Actions .uncheck() - uncheck a checkbox element",
              "timedOut": null,
              "duration": 1165,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/uncheck\n// By default, .uncheck() will uncheck all matching\n// checkbox elements in succession, one after another\ncy.get('.action-check [type=\"checkbox\"]').not('[disabled]').uncheck().should('not.be.checked'); // .uncheck() accepts a value argument\ncy.get('.action-check [type=\"checkbox\"]').check('checkbox1').uncheck('checkbox1').should('not.be.checked'); // .uncheck() accepts an array of values\ncy.get('.action-check [type=\"checkbox\"]').check(['checkbox1', 'checkbox3']).uncheck(['checkbox1', 'checkbox3']).should('not.be.checked'); // Ignore error checking prior to unchecking\ncy.get('.action-check [disabled]').uncheck({\n  force: true\n}).should('not.be.checked');",
              "err": {},
              "uuid": "58182271-d38b-4baa-b0d5-fae539e9b9e5",
              "parentUUID": "3bb78e12-d01e-4bd6-ab69-dcb016abd7e4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".select() - select an option in a <select> element",
              "fullTitle": "Actions .select() - select an option in a <select> element",
              "timedOut": null,
              "duration": 1190,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/select\n// at first, no option should be selected\ncy.get('.action-select').should('have.value', '--Select a fruit--'); // Select option(s) with matching text content\ncy.get('.action-select').select('apples'); // confirm the apples were selected\n// note that each value starts with \"fr-\" in our HTML\ncy.get('.action-select').should('have.value', 'fr-apples');\ncy.get('.action-select-multiple').select(['apples', 'oranges', 'bananas']) // when getting multiple values, invoke \"val\" method first\n.invoke('val').should('deep.equal', ['fr-apples', 'fr-oranges', 'fr-bananas']); // Select option(s) with matching value\ncy.get('.action-select').select('fr-bananas') // can attach an assertion right away to the element\n.should('have.value', 'fr-bananas');\ncy.get('.action-select-multiple').select(['fr-apples', 'fr-oranges', 'fr-bananas']).invoke('val').should('deep.equal', ['fr-apples', 'fr-oranges', 'fr-bananas']); // assert the selected values include oranges\ncy.get('.action-select-multiple').invoke('val').should('include', 'fr-oranges');",
              "err": {},
              "uuid": "d92c94fb-9e14-42f3-b980-191b044f6f3e",
              "parentUUID": "3bb78e12-d01e-4bd6-ab69-dcb016abd7e4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".scrollIntoView() - scroll an element into view",
              "fullTitle": "Actions .scrollIntoView() - scroll an element into view",
              "timedOut": null,
              "duration": 253,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/scrollintoview\n// normally all of these buttons are hidden,\n// because they're not within\n// the viewable area of their parent\n// (we need to scroll to see them)\ncy.get('#scroll-horizontal button').should('not.be.visible'); // scroll the button into view, as if the user had scrolled\ncy.get('#scroll-horizontal button').scrollIntoView().should('be.visible');\ncy.get('#scroll-vertical button').should('not.be.visible'); // Cypress handles the scroll direction needed\ncy.get('#scroll-vertical button').scrollIntoView().should('be.visible');\ncy.get('#scroll-both button').should('not.be.visible'); // Cypress knows to scroll to the right and down\ncy.get('#scroll-both button').scrollIntoView().should('be.visible');",
              "err": {},
              "uuid": "5bac005d-c53f-4c58-8c8d-1803f08129e1",
              "parentUUID": "3bb78e12-d01e-4bd6-ab69-dcb016abd7e4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".trigger() - trigger an event on a DOM element",
              "fullTitle": "Actions .trigger() - trigger an event on a DOM element",
              "timedOut": null,
              "duration": 279,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/trigger\n// To interact with a range input (slider)\n// we need to set its value & trigger the\n// event to signal it changed\n// Here, we invoke jQuery's val() method to set\n// the value and trigger the 'change' event\ncy.get('.trigger-input-range').invoke('val', 25).trigger('change').get('input[type=range]').siblings('p').should('have.text', '25');",
              "err": {},
              "uuid": "87a65544-08e8-4179-b992-3f890a781fcd",
              "parentUUID": "3bb78e12-d01e-4bd6-ab69-dcb016abd7e4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.scrollTo() - scroll the window or element to a position",
              "fullTitle": "Actions cy.scrollTo() - scroll the window or element to a position",
              "timedOut": null,
              "duration": 2240,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/scrollto\n// You can scroll to 9 specific positions of an element:\n//  -----------------------------------\n// | topLeft        top       topRight |\n// |                                   |\n// |                                   |\n// |                                   |\n// | left          center        right |\n// |                                   |\n// |                                   |\n// |                                   |\n// | bottomLeft   bottom   bottomRight |\n//  -----------------------------------\n// if you chain .scrollTo() off of cy, we will\n// scroll the entire window\ncy.scrollTo('bottom');\ncy.get('#scrollable-horizontal').scrollTo('right'); // or you can scroll to a specific coordinate:\n// (x axis, y axis) in pixels\ncy.get('#scrollable-vertical').scrollTo(250, 250); // or you can scroll to a specific percentage\n// of the (width, height) of the element\ncy.get('#scrollable-both').scrollTo('75%', '25%'); // control the easing of the scroll (default is 'swing')\ncy.get('#scrollable-vertical').scrollTo('center', {\n  easing: 'linear'\n}); // control the duration of the scroll (in ms)\ncy.get('#scrollable-both').scrollTo('center', {\n  duration: 2000\n});",
              "err": {},
              "uuid": "24f921e4-b858-4b57-9905-b5d36e2f02c8",
              "parentUUID": "3bb78e12-d01e-4bd6-ab69-dcb016abd7e4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bdda0848-8fc2-42ea-b880-c2525573d803",
            "7593d457-ff9e-4920-b094-7048001e34f0",
            "ee40d750-7dad-4761-8bb1-9d60002864a9",
            "c25c11d6-c110-4003-8c29-cf5a45485982",
            "60e1c590-c5dc-4966-9ebc-e59914546a02",
            "1f2cc6aa-5c41-424d-92d2-ba719c8b8223",
            "f15f591d-9fb8-4687-9947-0ffb5b5927aa",
            "ac709eaf-c89d-45f6-a7bc-0a3c556be62d",
            "98a23252-26fa-49b5-9bbb-223ff1e0067e",
            "58182271-d38b-4baa-b0d5-fae539e9b9e5",
            "d92c94fb-9e14-42f3-b980-191b044f6f3e",
            "5bac005d-c53f-4c58-8c8d-1803f08129e1",
            "87a65544-08e8-4179-b992-3f890a781fcd",
            "24f921e4-b858-4b57-9905-b5d36e2f02c8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15853,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "1573ac0e-231b-42a5-beca-6feb971e05b7",
      "title": "",
      "fullFile": "cypress/integration/test/assertions.spec.js",
      "file": "cypress/integration/test/assertions.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3903c244-5139-430f-93f8-ba7143a15721",
          "title": "Assertions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "76515709-1e8b-4121-80f0-d9f3939ddd1d",
              "title": "Implicit Assertions",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": ".should() - make an assertion about the current subject",
                  "fullTitle": "Assertions Implicit Assertions .should() - make an assertion about the current subject",
                  "timedOut": null,
                  "duration": 480,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/should\ncy.get('.assertion-table').find('tbody tr:last').should('have.class', 'success').find('td').first() // checking the text of the <td> element in various ways\n.should('have.text', 'Column content').should('contain', 'Column content').should('have.html', 'Column content') // chai-jquery uses \"is()\" to check if element matches selector\n.should('match', 'td') // to match text content against a regular expression\n// first need to invoke jQuery method text()\n// and then match using regular expression\n.invoke('text').should('match', /column content/i); // a better way to check element's text content against a regular expression\n// is to use \"cy.contains\"\n// https://on.cypress.io/contains\ncy.get('.assertion-table').find('tbody tr:last') // finds first <td> element with text content matching regular expression\n.contains('td', /column content/i).should('be.visible'); // for more information about asserting element's text\n// see https://on.cypress.io/using-cypress-faq#How-do-I-get-an-elementÔÇÖs-text-contents",
                  "err": {},
                  "uuid": "4d70cadd-3e30-458e-b41b-f144afd10b65",
                  "parentUUID": "76515709-1e8b-4121-80f0-d9f3939ddd1d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": ".and() - chain multiple assertions together",
                  "fullTitle": "Assertions Implicit Assertions .and() - chain multiple assertions together",
                  "timedOut": null,
                  "duration": 177,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/and\ncy.get('.assertions-link').should('have.class', 'active').and('have.attr', 'href').and('include', 'cypress.io');",
                  "err": {},
                  "uuid": "826597da-db3c-4074-bc84-231e5c5bef65",
                  "parentUUID": "76515709-1e8b-4121-80f0-d9f3939ddd1d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4d70cadd-3e30-458e-b41b-f144afd10b65",
                "826597da-db3c-4074-bc84-231e5c5bef65"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 657,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "642e4cfa-fdcc-4168-91e9-18ea0d229de5",
              "title": "Explicit Assertions",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "expect - make an assertion about a specified subject",
                  "fullTitle": "Assertions Explicit Assertions expect - make an assertion about a specified subject",
                  "timedOut": null,
                  "duration": 137,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// We can use Chai's BDD style assertions\nexpect(true).to.be.true;\nconst o = {\n  foo: 'bar'\n};\nexpect(o).to.equal(o);\nexpect(o).to.deep.equal({\n  foo: 'bar'\n}); // matching text using regular expression\nexpect('FooBar').to.match(/bar$/i);",
                  "err": {},
                  "uuid": "03e5deec-e396-4297-9f13-a44432860f91",
                  "parentUUID": "642e4cfa-fdcc-4168-91e9-18ea0d229de5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "pass your own callback function to should()",
                  "fullTitle": "Assertions Explicit Assertions pass your own callback function to should()",
                  "timedOut": null,
                  "duration": 145,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Pass a function to should that can have any number\n// of explicit assertions within it.\n// The \".should(cb)\" function will be retried\n// automatically until it passes all your explicit assertions or times out.\ncy.get('.assertions-p').find('p').should($p => {\n  // https://on.cypress.io/$\n  // return an array of texts from all of the p's\n  // @ts-ignore TS6133 unused variable\n  const texts = $p.map((i, el) => Cypress.$(el).text()); // jquery map returns jquery object\n  // and .get() convert this to simple array\n  const paragraphs = texts.get(); // array should have length of 3\n  expect(paragraphs, 'has 3 paragraphs').to.have.length(3); // use second argument to expect(...) to provide clear\n  // message with each assertion\n  expect(paragraphs, 'has expected text in each paragraph').to.deep.eq(['Some text from first p', 'More text from second p', 'And even more text from third p']);\n});",
                  "err": {},
                  "uuid": "8f522b3d-b409-4302-867a-4a54a65c96b7",
                  "parentUUID": "642e4cfa-fdcc-4168-91e9-18ea0d229de5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "finds element by class name regex",
                  "fullTitle": "Assertions Explicit Assertions finds element by class name regex",
                  "timedOut": null,
                  "duration": 155,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.docs-header').find('div') // .should(cb) callback function will be retried\n.should($div => {\n  expect($div).to.have.length(1);\n  const className = $div[0].className;\n  expect(className).to.match(/heading-/);\n}) // .then(cb) callback is not retried,\n// it either passes or fails\n.then($div => {\n  expect($div, 'text content').to.have.text('Introduction');\n});",
                  "err": {},
                  "uuid": "1e508288-265e-442e-af5f-a729766cb465",
                  "parentUUID": "642e4cfa-fdcc-4168-91e9-18ea0d229de5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can throw any error",
                  "fullTitle": "Assertions Explicit Assertions can throw any error",
                  "timedOut": null,
                  "duration": 139,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.docs-header').find('div').should($div => {\n  if ($div.length !== 1) {\n    // you can throw your own errors\n    throw new Error('Did not find 1 element');\n  }\n  const className = $div[0].className;\n  if (!className.match(/heading-/)) {\n    throw new Error(`Could not find class \"heading-\" in ${className}`);\n  }\n});",
                  "err": {},
                  "uuid": "c8a482e8-0640-4637-b10d-7fe8f9996358",
                  "parentUUID": "642e4cfa-fdcc-4168-91e9-18ea0d229de5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "matches unknown text between two elements",
                  "fullTitle": "Assertions Explicit Assertions matches unknown text between two elements",
                  "timedOut": null,
                  "duration": 229,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "/**\n * Text from the first element.\n * @type {string}\n*/\nlet text;\n/**\n * Normalizes passed text,\n * useful before comparing text with spaces and different capitalization.\n * @param {string} s Text to normalize\n*/\nconst normalizeText = s => s.replace(/\\s/g, '').toLowerCase();\ncy.get('.two-elements').find('.first').then($first => {\n  // save text from the first element\n  text = normalizeText($first.text());\n});\ncy.get('.two-elements').find('.second').should($div => {\n  // we can massage text before comparing\n  const secondText = normalizeText($div.text());\n  expect(secondText, 'second text').to.equal(text);\n});",
                  "err": {},
                  "uuid": "492904f2-0ff6-4838-bf1a-815dd4eb16fe",
                  "parentUUID": "642e4cfa-fdcc-4168-91e9-18ea0d229de5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "assert - assert shape of an object",
                  "fullTitle": "Assertions Explicit Assertions assert - assert shape of an object",
                  "timedOut": null,
                  "duration": 135,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const person = {\n  name: 'Joe',\n  age: 20\n};\nassert.isObject(person, 'value is object');",
                  "err": {},
                  "uuid": "7045f859-120b-4f84-b071-cea2e39303f6",
                  "parentUUID": "642e4cfa-fdcc-4168-91e9-18ea0d229de5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "retries the should callback until assertions pass",
                  "fullTitle": "Assertions Explicit Assertions retries the should callback until assertions pass",
                  "timedOut": null,
                  "duration": 1628,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('#random-number').should($div => {\n  const n = parseFloat($div.text());\n  expect(n).to.be.gte(1).and.be.lte(10);\n});",
                  "err": {},
                  "uuid": "126d1e1d-935b-4191-bc08-792b4f318cc6",
                  "parentUUID": "642e4cfa-fdcc-4168-91e9-18ea0d229de5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "03e5deec-e396-4297-9f13-a44432860f91",
                "8f522b3d-b409-4302-867a-4a54a65c96b7",
                "1e508288-265e-442e-af5f-a729766cb465",
                "c8a482e8-0640-4637-b10d-7fe8f9996358",
                "492904f2-0ff6-4838-bf1a-815dd4eb16fe",
                "7045f859-120b-4f84-b071-cea2e39303f6",
                "126d1e1d-935b-4191-bc08-792b4f318cc6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2568,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "72b198a4-56a1-4ffc-8ee2-297c9227b060",
      "title": "",
      "fullFile": "cypress/integration/test/1_browser_actions.spec.js",
      "file": "cypress/integration/test/1_browser_actions.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2108c71d-6309-43e4-8e23-e92f76de6a47",
          "title": "Browser actions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should load correct url",
              "fullTitle": "Browser actions should load correct url",
              "timedOut": null,
              "duration": 229,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// specify timeout locally\ncy.visit('http://example.com/', {\n  timeout: 10000\n});",
              "err": {},
              "uuid": "3ea5f73e-50ac-469a-940e-3a0afd95d0c6",
              "parentUUID": "2108c71d-6309-43e4-8e23-e92f76de6a47",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should check correct url",
              "fullTitle": "Browser actions should check correct url",
              "timedOut": null,
              "duration": 40,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.url().should('include', 'example.com');",
              "err": {},
              "uuid": "7e582110-a257-4287-8507-96f6facd90b5",
              "parentUUID": "2108c71d-6309-43e4-8e23-e92f76de6a47",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should check for correct & visible element on the page",
              "fullTitle": "Browser actions should check for correct & visible element on the page",
              "timedOut": null,
              "duration": 55,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('body > :nth-child(1) > :nth-child(2)').should('be.visible');",
              "err": {},
              "uuid": "e08037c2-4c79-4f27-8a51-1f1285af4903",
              "parentUUID": "2108c71d-6309-43e4-8e23-e92f76de6a47",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should check for correct & visible element on the page",
              "fullTitle": "Browser actions should check for correct & visible element on the page",
              "timedOut": null,
              "duration": 36,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1').should('be.visible');",
              "err": {},
              "uuid": "93a2e861-73da-4a87-a470-9bfc1cd83a15",
              "parentUUID": "2108c71d-6309-43e4-8e23-e92f76de6a47",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should wait for 3 seconds",
              "fullTitle": "Browser actions should wait for 3 seconds",
              "timedOut": null,
              "duration": 3026,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(3000);",
              "err": {},
              "uuid": "d7b2f7d5-a780-49bd-9d91-2c84f894bc4f",
              "parentUUID": "2108c71d-6309-43e4-8e23-e92f76de6a47",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should pasue the execution",
              "fullTitle": "Browser actions should pasue the execution",
              "timedOut": null,
              "duration": 28,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.pause();",
              "err": {},
              "uuid": "4cf3a284-fd77-4c73-90fe-62c0965d421e",
              "parentUUID": "2108c71d-6309-43e4-8e23-e92f76de6a47",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3ea5f73e-50ac-469a-940e-3a0afd95d0c6",
            "7e582110-a257-4287-8507-96f6facd90b5",
            "e08037c2-4c79-4f27-8a51-1f1285af4903",
            "93a2e861-73da-4a87-a470-9bfc1cd83a15",
            "d7b2f7d5-a780-49bd-9d91-2c84f894bc4f",
            "4cf3a284-fd77-4c73-90fe-62c0965d421e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3414,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/results",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}
