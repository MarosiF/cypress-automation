{
  "stats": {
    "suites": 7,
    "tests": 51,
    "passes": 51,
    "pending": 0,
    "failures": 0,
    "start": "2022-05-23T23:24:37.681Z",
    "end": "2022-05-23T23:25:55.212Z",
    "duration": 47252,
    "testsRegistered": 51,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "7944748c-1289-402c-a650-0e383b79a708",
      "title": "",
      "fullFile": "cypress/integration/test/2_buttons.spec.js",
      "file": "cypress/integration/test/2_buttons.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "cc91844c-93f2-4462-a233-0177a5df7853",
          "title": "Browser actions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should load books url",
              "fullTitle": "Browser actions should load books url",
              "timedOut": null,
              "duration": 2202,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://books.toscrape.com/index.html', {\n  timeout: 10000\n});\ncy.url().should('include', 'index.html'); //Cypress log\ncy.log('Before reload'); //Browser refresh/reload\ncy.reload();\ncy.log('After reload');",
              "err": {},
              "uuid": "c866d173-8bdf-49a8-a629-108646307cd7",
              "parentUUID": "cc91844c-93f2-4462-a233-0177a5df7853",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should click on poetry category",
              "fullTitle": "Browser actions should click on poetry category",
              "timedOut": null,
              "duration": 1124,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//targeting an html element\ncy.get('a').contains('Poetry').click();",
              "err": {},
              "uuid": "1f1f2c52-179c-497d-9819-284c3ffbfab1",
              "parentUUID": "cc91844c-93f2-4462-a233-0177a5df7853",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have correct price tag",
              "fullTitle": "Browser actions should have correct price tag",
              "timedOut": null,
              "duration": 64,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//targeting a class\ncy.get('.price_color').contains('┬ú23.88');",
              "err": {},
              "uuid": "412b5b02-a5ac-450a-93f3-a418c5760c9b",
              "parentUUID": "cc91844c-93f2-4462-a233-0177a5df7853",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have correct price tag",
              "fullTitle": "Browser actions should have correct price tag",
              "timedOut": null,
              "duration": 58,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//targeting a class\ncy.get('.price_color').contains('┬ú23.88');",
              "err": {},
              "uuid": "508c35ab-99e1-46d9-b2f5-8dc01372e6b2",
              "parentUUID": "cc91844c-93f2-4462-a233-0177a5df7853",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should click on Home",
              "fullTitle": "Browser actions should click on Home",
              "timedOut": null,
              "duration": 548,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//targeting an html element\ncy.get('.breadcrumb > :nth-child(1) > a').click();",
              "err": {},
              "uuid": "7ab9e901-c259-4982-8d05-d349e2f14eab",
              "parentUUID": "cc91844c-93f2-4462-a233-0177a5df7853",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should click on Travel category",
              "fullTitle": "Browser actions should click on Travel category",
              "timedOut": null,
              "duration": 1052,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//targeting an html element\ncy.get('a').contains('Travel').click();\ncy.get('h1').contains('Travel');",
              "err": {},
              "uuid": "fefe8009-6036-452e-af72-8f54ae8dbc6c",
              "parentUUID": "cc91844c-93f2-4462-a233-0177a5df7853",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display correct number of books",
              "fullTitle": "Browser actions should display correct number of books",
              "timedOut": null,
              "duration": 61,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//targeting a class, use .class_name\ncy.get('.product_pod') //grab its length\n.its('length') //it should equal 11\n.should('eq', 11);",
              "err": {},
              "uuid": "7c6188b9-7509-45cb-92d4-fbbebf7c60f9",
              "parentUUID": "cc91844c-93f2-4462-a233-0177a5df7853",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should take a snapshot",
              "fullTitle": "Browser actions should take a snapshot",
              "timedOut": null,
              "duration": 1279,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.screenshot();",
              "err": {},
              "uuid": "d696d6d7-572f-4d9e-80f2-066f247549fb",
              "parentUUID": "cc91844c-93f2-4462-a233-0177a5df7853",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c866d173-8bdf-49a8-a629-108646307cd7",
            "1f1f2c52-179c-497d-9819-284c3ffbfab1",
            "412b5b02-a5ac-450a-93f3-a418c5760c9b",
            "508c35ab-99e1-46d9-b2f5-8dc01372e6b2",
            "7ab9e901-c259-4982-8d05-d349e2f14eab",
            "fefe8009-6036-452e-af72-8f54ae8dbc6c",
            "7c6188b9-7509-45cb-92d4-fbbebf7c60f9",
            "d696d6d7-572f-4d9e-80f2-066f247549fb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6388,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "28c782f9-7d88-443b-bd3a-59e7b97bfeca",
      "title": "",
      "fullFile": "cypress/integration/test/3_inputs.spec.js",
      "file": "cypress/integration/test/3_inputs.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ab60957c-2f1d-49c0-9141-6fe59339c417",
          "title": "Working with inputs",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should load books url",
              "fullTitle": "Working with inputs should load books url",
              "timedOut": null,
              "duration": 904,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://zero.webappsecurity.com/login.html', {\n  timeout: 10000\n});\ncy.url().should('include', 'zero'); //Clear cookies & local storage, cypress automatically clears cookies between tests\ncy.clearCookies({\n  log: true\n});\ncy.clearLocalStorage({\n  log: true\n});",
              "err": {},
              "uuid": "6b9f769c-565b-4bbc-8d8b-a785b4e10bbd",
              "parentUUID": "ab60957c-2f1d-49c0-9141-6fe59339c417",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fill username",
              "fullTitle": "Working with inputs should fill username",
              "timedOut": null,
              "duration": 246,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//targeting an id, use #id_name\n//make sure input is clear, input should be blank\ncy.get('#user_login').clear();\ncy.get('#user_login').type('Moin');",
              "err": {},
              "uuid": "068d1ba3-15b6-4868-923d-c1d76b5c0f6b",
              "parentUUID": "ab60957c-2f1d-49c0-9141-6fe59339c417",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fill password",
              "fullTitle": "Working with inputs should fill password",
              "timedOut": null,
              "duration": 1704,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Variables and Aliases\ncy.get('#user_password').as('pw');\ncy.get('@pw').clear(); //Wait between typing\ncy.get('@pw').type('moin moin moin', {\n  delay: 100\n});",
              "err": {},
              "uuid": "05d6a5a7-4df6-49c0-ad2d-53830b64b967",
              "parentUUID": "ab60957c-2f1d-49c0-9141-6fe59339c417",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit login form",
              "fullTitle": "Working with inputs should submit login form",
              "timedOut": null,
              "duration": 472,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Sign in').click();",
              "err": {},
              "uuid": "94c6d795-b70b-4437-98da-a151fa0d7398",
              "parentUUID": "ab60957c-2f1d-49c0-9141-6fe59339c417",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display error",
              "fullTitle": "Working with inputs should display error",
              "timedOut": null,
              "duration": 49,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.alert-error').should('be.visible');",
              "err": {},
              "uuid": "6b602601-1dc6-4c0e-9772-d23b920c394d",
              "parentUUID": "ab60957c-2f1d-49c0-9141-6fe59339c417",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display error message",
              "fullTitle": "Working with inputs should display error message",
              "timedOut": null,
              "duration": 36,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.alert-error').should('be.visible').and('contain', 'Login and/or password are wrong.');",
              "err": {},
              "uuid": "684b44d9-dd77-40d8-abd8-1c3298427155",
              "parentUUID": "ab60957c-2f1d-49c0-9141-6fe59339c417",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should mark checkbox",
              "fullTitle": "Working with inputs should mark checkbox",
              "timedOut": null,
              "duration": 102,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//targeting an attribute, use #id_name\n//make sure input is clear, input should be blank\ncy.get('input[type=\"checkbox\"]').click();",
              "err": {},
              "uuid": "a5e016c4-046d-4411-a8e6-7dc946a3366b",
              "parentUUID": "ab60957c-2f1d-49c0-9141-6fe59339c417",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6b9f769c-565b-4bbc-8d8b-a785b4e10bbd",
            "068d1ba3-15b6-4868-923d-c1d76b5c0f6b",
            "05d6a5a7-4df6-49c0-ad2d-53830b64b967",
            "94c6d795-b70b-4437-98da-a151fa0d7398",
            "6b602601-1dc6-4c0e-9772-d23b920c394d",
            "684b44d9-dd77-40d8-abd8-1c3298427155",
            "a5e016c4-046d-4411-a8e6-7dc946a3366b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3513,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "be69934c-e6ea-436a-a6ba-1592e4848dd3",
      "title": "",
      "fullFile": "cypress/integration/test/4_select_box.spec.js",
      "file": "cypress/integration/test/4_select_box.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a5b9e545-5127-4e88-b366-be213493faf3",
          "title": "Select Box",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should load website with select box",
              "fullTitle": "Select Box should load website with select box",
              "timedOut": null,
              "duration": 533,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://devexpress.github.io/testcafe/example/', {\n  timeout: 10000\n});\ncy.url().should('include', 'testcafe');",
              "err": {},
              "uuid": "0ba626f4-581e-443a-abb7-ce06fd6c334d",
              "parentUUID": "a5b9e545-5127-4e88-b366-be213493faf3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should select an option from select box",
              "fullTitle": "Select Box should select an option from select box",
              "timedOut": null,
              "duration": 5212,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//targeting an html element\ncy.get('#preferred-interface').select('JavaScript API');\ncy.get('#preferred-interface').should('have.value', 'JavaScript API');\ncy.wait(5000);",
              "err": {},
              "uuid": "205b5b3b-95f1-4736-b592-d760a91aa296",
              "parentUUID": "a5b9e545-5127-4e88-b366-be213493faf3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should select an option from select box",
              "fullTitle": "Select Box should select an option from select box",
              "timedOut": null,
              "duration": 169,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//targeting an html element\ncy.get('#preferred-interface').select('Both');\ncy.get('#preferred-interface').should('have.value', 'Both');",
              "err": {},
              "uuid": "8887e796-e735-4722-8be3-4c5dc1064257",
              "parentUUID": "a5b9e545-5127-4e88-b366-be213493faf3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should select an option from select box",
              "fullTitle": "Select Box should select an option from select box",
              "timedOut": null,
              "duration": 409,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//targeting an html element\ncy.get('.col-1 > :nth-child(2) > :nth-child(2)').click();\ncy.get('[data-testid=\"tried-testcafe-checkbox\"]').click();\ncy.get('[data-testid=\"comments-area\"]').type('Moin');",
              "err": {},
              "uuid": "5b5e5ae5-1eb5-4d12-9157-6801933aff1d",
              "parentUUID": "a5b9e545-5127-4e88-b366-be213493faf3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should scroll down and up on the page",
              "fullTitle": "Select Box should scroll down and up on the page",
              "timedOut": null,
              "duration": 5084,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#submit-button').scrollIntoView();\ncy.wait(5000);\ncy.get('header').scrollIntoView();",
              "err": {},
              "uuid": "330caf74-f97b-41c9-b452-aa427e01b73f",
              "parentUUID": "a5b9e545-5127-4e88-b366-be213493faf3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0ba626f4-581e-443a-abb7-ce06fd6c334d",
            "205b5b3b-95f1-4736-b592-d760a91aa296",
            "8887e796-e735-4722-8be3-4c5dc1064257",
            "5b5e5ae5-1eb5-4d12-9157-6801933aff1d",
            "330caf74-f97b-41c9-b452-aa427e01b73f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11407,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "62b4daae-8444-466d-8e85-f5315529b38a",
      "title": "",
      "fullFile": "cypress/integration/test/5_fixture.spec.js",
      "file": "cypress/integration/test/5_fixture.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "43ef68d0-f752-414c-b988-6da29d363ab6",
          "title": "Fixtures and Keyboard",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should try to login",
              "fullTitle": "Fixtures and Keyboard should try to login",
              "timedOut": null,
              "duration": 1485,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://zero.webappsecurity.com/login.html', {\n  timeout: 10000\n});\ncy.url().should('include', 'zero'); //returns the value of the user json file\ncy.fixture('user').then(user => {\n  const username = user.username;\n  const password = user.password;\n  cy.get('#user_login').clear();\n  cy.get('#user_login').type(username);\n  cy.get('#user_password').clear();\n  cy.get('#user_password').type(password);\n});",
              "err": {},
              "uuid": "b71a4611-151a-4e1e-8de4-fc4fa3856a45",
              "parentUUID": "43ef68d0-f752-414c-b988-6da29d363ab6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should press enter",
              "fullTitle": "Fixtures and Keyboard should press enter",
              "timedOut": null,
              "duration": 1158,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://zero.webappsecurity.com/index.html', {\n  timeout: 10000\n});\ncy.url().should('include', 'index');\ncy.get('#searchTerm').type('Online Banking {enter}');\ncy.contains('Search Results:');",
              "err": {},
              "uuid": "559c441e-ac95-42b8-be63-7c9d129eb71a",
              "parentUUID": "43ef68d0-f752-414c-b988-6da29d363ab6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b71a4611-151a-4e1e-8de4-fc4fa3856a45",
            "559c441e-ac95-42b8-be63-7c9d129eb71a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2643,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "bc6c986d-d1a8-4724-bd9c-c1d6a3779e22",
      "title": "",
      "fullFile": "cypress/integration/test/6_actions.spec.js",
      "file": "cypress/integration/test/6_actions.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0c4b67ef-3e25-4206-86a2-e6ee329b8412",
          "title": "Actions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".type() - type into a DOM element",
              "fullTitle": "Actions .type() - type into a DOM element",
              "timedOut": null,
              "duration": 4464,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/type\ncy.get('.action-email').type('fake@email.com').should('have.value', 'fake@email.com') // .type() with special character sequences\n.type('{leftarrow}{rightarrow}{uparrow}{downarrow}').type('{del}{selectall}{backspace}') // .type() with key modifiers\n.type('{alt}{option}') //these are equivalent\n.type('{ctrl}{control}') //these are equivalent\n.type('{meta}{command}{cmd}') //these are equivalent\n.type('{shift}') // Delay each keypress by 0.1 sec\n.type('slow.typing@email.com', {\n  delay: 100\n}).should('have.value', 'slow.typing@email.com');\ncy.get('.action-disabled') // Ignore error checking prior to type\n// like whether the input is visible or disabled\n.type('disabled error checking', {\n  force: true\n}).should('have.value', 'disabled error checking');",
              "err": {},
              "uuid": "dcf1dba1-574f-45f7-ad6a-fcf916707b92",
              "parentUUID": "0c4b67ef-3e25-4206-86a2-e6ee329b8412",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".focus() - focus on a DOM element",
              "fullTitle": "Actions .focus() - focus on a DOM element",
              "timedOut": null,
              "duration": 201,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/focus\ncy.get('.action-focus').focus().should('have.class', 'focus').prev().should('have.attr', 'style', 'color: orange;');",
              "err": {},
              "uuid": "fb6740f8-cf59-469e-8092-228ab4d790fe",
              "parentUUID": "0c4b67ef-3e25-4206-86a2-e6ee329b8412",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".blur() - blur off a DOM element",
              "fullTitle": "Actions .blur() - blur off a DOM element",
              "timedOut": null,
              "duration": 498,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/blur\ncy.get('.action-blur').type('About to blur').blur().should('have.class', 'error').prev().should('have.attr', 'style', 'color: red;');",
              "err": {},
              "uuid": "ad333281-cabe-40bc-99b2-fb40844d4ca7",
              "parentUUID": "0c4b67ef-3e25-4206-86a2-e6ee329b8412",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".clear() - clears an input or textarea element",
              "fullTitle": "Actions .clear() - clears an input or textarea element",
              "timedOut": null,
              "duration": 606,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clear\ncy.get('.action-clear').type('Clear this text').should('have.value', 'Clear this text').clear().should('have.value', '');",
              "err": {},
              "uuid": "e5d0dd75-ec22-4d2f-a857-5fb854554654",
              "parentUUID": "0c4b67ef-3e25-4206-86a2-e6ee329b8412",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".submit() - submit a form",
              "fullTitle": "Actions .submit() - submit a form",
              "timedOut": null,
              "duration": 586,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/submit\ncy.get('.action-form').find('[type=\"text\"]').type('HALFOFF');\ncy.get('.action-form').submit().next().should('contain', 'Your form has been submitted!');",
              "err": {},
              "uuid": "6528d8b3-18f7-46cf-bbba-1b22c34a1494",
              "parentUUID": "0c4b67ef-3e25-4206-86a2-e6ee329b8412",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".click() - click on a DOM element",
              "fullTitle": "Actions .click() - click on a DOM element",
              "timedOut": null,
              "duration": 3434,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/click\ncy.get('.action-btn').click(); // You can click on 9 specific positions of an element:\n//  -----------------------------------\n// | topLeft        top       topRight |\n// |                                   |\n// |                                   |\n// |                                   |\n// | left          center        right |\n// |                                   |\n// |                                   |\n// |                                   |\n// | bottomLeft   bottom   bottomRight |\n//  -----------------------------------\n// clicking in the center of the element is the default\ncy.get('#action-canvas').click();\ncy.get('#action-canvas').click('topLeft');\ncy.get('#action-canvas').click('top');\ncy.get('#action-canvas').click('topRight');\ncy.get('#action-canvas').click('left');\ncy.get('#action-canvas').click('right');\ncy.get('#action-canvas').click('bottomLeft');\ncy.get('#action-canvas').click('bottom');\ncy.get('#action-canvas').click('bottomRight'); // .click() accepts an x and y coordinate\n// that controls where the click occurs :)\ncy.get('#action-canvas').click(80, 75) // click 80px on x coord and 75px on y coord\n.click(170, 75).click(80, 165).click(100, 185).click(125, 190).click(150, 185).click(170, 165); // click multiple elements by passing multiple: true\ncy.get('.action-labels>.label').click({\n  multiple: true\n}); // Ignore error checking prior to clicking\ncy.get('.action-opacity>.btn').click({\n  force: true\n});",
              "err": {},
              "uuid": "bf316c02-2e14-4b2f-b891-9c4545857b6d",
              "parentUUID": "0c4b67ef-3e25-4206-86a2-e6ee329b8412",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".dblclick() - double click on a DOM element",
              "fullTitle": "Actions .dblclick() - double click on a DOM element",
              "timedOut": null,
              "duration": 347,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/dblclick\n// Our app has a listener on 'dblclick' event in our 'scripts.js'\n// that hides the div and shows an input on double click\ncy.get('.action-div').dblclick().should('not.be.visible');\ncy.get('.action-input-hidden').should('be.visible');",
              "err": {},
              "uuid": "9bd3d460-54e9-4d59-995f-92ed5fe6f730",
              "parentUUID": "0c4b67ef-3e25-4206-86a2-e6ee329b8412",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".rightclick() - right click on a DOM element",
              "fullTitle": "Actions .rightclick() - right click on a DOM element",
              "timedOut": null,
              "duration": 342,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/rightclick\n// Our app has a listener on 'contextmenu' event in our 'scripts.js'\n// that hides the div and shows an input on right click\ncy.get('.rightclick-action-div').rightclick().should('not.be.visible');\ncy.get('.rightclick-action-input-hidden').should('be.visible');",
              "err": {},
              "uuid": "cecd1ab6-65e0-412e-bea0-250969a293db",
              "parentUUID": "0c4b67ef-3e25-4206-86a2-e6ee329b8412",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".check() - check a checkbox or radio element",
              "fullTitle": "Actions .check() - check a checkbox or radio element",
              "timedOut": null,
              "duration": 1177,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/check\n// By default, .check() will check all\n// matching checkbox or radio elements in succession, one after another\ncy.get('.action-checkboxes [type=\"checkbox\"]').not('[disabled]').check().should('be.checked');\ncy.get('.action-radios [type=\"radio\"]').not('[disabled]').check().should('be.checked'); // .check() accepts a value argument\ncy.get('.action-radios [type=\"radio\"]').check('radio1').should('be.checked'); // .check() accepts an array of values\ncy.get('.action-multiple-checkboxes [type=\"checkbox\"]').check(['checkbox1', 'checkbox2']).should('be.checked'); // Ignore error checking prior to checking\ncy.get('.action-checkboxes [disabled]').check({\n  force: true\n}).should('be.checked');\ncy.get('.action-radios [type=\"radio\"]').check('radio3', {\n  force: true\n}).should('be.checked');",
              "err": {},
              "uuid": "a37d6748-f82d-4bf7-843b-71f7e3e53f7f",
              "parentUUID": "0c4b67ef-3e25-4206-86a2-e6ee329b8412",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".uncheck() - uncheck a checkbox element",
              "fullTitle": "Actions .uncheck() - uncheck a checkbox element",
              "timedOut": null,
              "duration": 1156,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/uncheck\n// By default, .uncheck() will uncheck all matching\n// checkbox elements in succession, one after another\ncy.get('.action-check [type=\"checkbox\"]').not('[disabled]').uncheck().should('not.be.checked'); // .uncheck() accepts a value argument\ncy.get('.action-check [type=\"checkbox\"]').check('checkbox1').uncheck('checkbox1').should('not.be.checked'); // .uncheck() accepts an array of values\ncy.get('.action-check [type=\"checkbox\"]').check(['checkbox1', 'checkbox3']).uncheck(['checkbox1', 'checkbox3']).should('not.be.checked'); // Ignore error checking prior to unchecking\ncy.get('.action-check [disabled]').uncheck({\n  force: true\n}).should('not.be.checked');",
              "err": {},
              "uuid": "583484e7-44ca-4e79-b8c5-c8c9bc1f66c3",
              "parentUUID": "0c4b67ef-3e25-4206-86a2-e6ee329b8412",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".select() - select an option in a <select> element",
              "fullTitle": "Actions .select() - select an option in a <select> element",
              "timedOut": null,
              "duration": 1153,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/select\n// at first, no option should be selected\ncy.get('.action-select').should('have.value', '--Select a fruit--'); // Select option(s) with matching text content\ncy.get('.action-select').select('apples'); // confirm the apples were selected\n// note that each value starts with \"fr-\" in our HTML\ncy.get('.action-select').should('have.value', 'fr-apples');\ncy.get('.action-select-multiple').select(['apples', 'oranges', 'bananas']) // when getting multiple values, invoke \"val\" method first\n.invoke('val').should('deep.equal', ['fr-apples', 'fr-oranges', 'fr-bananas']); // Select option(s) with matching value\ncy.get('.action-select').select('fr-bananas') // can attach an assertion right away to the element\n.should('have.value', 'fr-bananas');\ncy.get('.action-select-multiple').select(['fr-apples', 'fr-oranges', 'fr-bananas']).invoke('val').should('deep.equal', ['fr-apples', 'fr-oranges', 'fr-bananas']); // assert the selected values include oranges\ncy.get('.action-select-multiple').invoke('val').should('include', 'fr-oranges');",
              "err": {},
              "uuid": "c6f1c30e-1973-4361-93cb-8064b6385fa5",
              "parentUUID": "0c4b67ef-3e25-4206-86a2-e6ee329b8412",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".scrollIntoView() - scroll an element into view",
              "fullTitle": "Actions .scrollIntoView() - scroll an element into view",
              "timedOut": null,
              "duration": 255,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/scrollintoview\n// normally all of these buttons are hidden,\n// because they're not within\n// the viewable area of their parent\n// (we need to scroll to see them)\ncy.get('#scroll-horizontal button').should('not.be.visible'); // scroll the button into view, as if the user had scrolled\ncy.get('#scroll-horizontal button').scrollIntoView().should('be.visible');\ncy.get('#scroll-vertical button').should('not.be.visible'); // Cypress handles the scroll direction needed\ncy.get('#scroll-vertical button').scrollIntoView().should('be.visible');\ncy.get('#scroll-both button').should('not.be.visible'); // Cypress knows to scroll to the right and down\ncy.get('#scroll-both button').scrollIntoView().should('be.visible');",
              "err": {},
              "uuid": "4e8af2a5-30fe-4f34-9efe-7747149059f1",
              "parentUUID": "0c4b67ef-3e25-4206-86a2-e6ee329b8412",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".trigger() - trigger an event on a DOM element",
              "fullTitle": "Actions .trigger() - trigger an event on a DOM element",
              "timedOut": null,
              "duration": 298,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/trigger\n// To interact with a range input (slider)\n// we need to set its value & trigger the\n// event to signal it changed\n// Here, we invoke jQuery's val() method to set\n// the value and trigger the 'change' event\ncy.get('.trigger-input-range').invoke('val', 25).trigger('change').get('input[type=range]').siblings('p').should('have.text', '25');",
              "err": {},
              "uuid": "78d70b9e-cba0-4ba6-a804-2ec1187c73d7",
              "parentUUID": "0c4b67ef-3e25-4206-86a2-e6ee329b8412",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.scrollTo() - scroll the window or element to a position",
              "fullTitle": "Actions cy.scrollTo() - scroll the window or element to a position",
              "timedOut": null,
              "duration": 2207,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/scrollto\n// You can scroll to 9 specific positions of an element:\n//  -----------------------------------\n// | topLeft        top       topRight |\n// |                                   |\n// |                                   |\n// |                                   |\n// | left          center        right |\n// |                                   |\n// |                                   |\n// |                                   |\n// | bottomLeft   bottom   bottomRight |\n//  -----------------------------------\n// if you chain .scrollTo() off of cy, we will\n// scroll the entire window\ncy.scrollTo('bottom');\ncy.get('#scrollable-horizontal').scrollTo('right'); // or you can scroll to a specific coordinate:\n// (x axis, y axis) in pixels\ncy.get('#scrollable-vertical').scrollTo(250, 250); // or you can scroll to a specific percentage\n// of the (width, height) of the element\ncy.get('#scrollable-both').scrollTo('75%', '25%'); // control the easing of the scroll (default is 'swing')\ncy.get('#scrollable-vertical').scrollTo('center', {\n  easing: 'linear'\n}); // control the duration of the scroll (in ms)\ncy.get('#scrollable-both').scrollTo('center', {\n  duration: 2000\n});",
              "err": {},
              "uuid": "694d1482-3827-4799-b877-28ac7cbc1c63",
              "parentUUID": "0c4b67ef-3e25-4206-86a2-e6ee329b8412",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dcf1dba1-574f-45f7-ad6a-fcf916707b92",
            "fb6740f8-cf59-469e-8092-228ab4d790fe",
            "ad333281-cabe-40bc-99b2-fb40844d4ca7",
            "e5d0dd75-ec22-4d2f-a857-5fb854554654",
            "6528d8b3-18f7-46cf-bbba-1b22c34a1494",
            "bf316c02-2e14-4b2f-b891-9c4545857b6d",
            "9bd3d460-54e9-4d59-995f-92ed5fe6f730",
            "cecd1ab6-65e0-412e-bea0-250969a293db",
            "a37d6748-f82d-4bf7-843b-71f7e3e53f7f",
            "583484e7-44ca-4e79-b8c5-c8c9bc1f66c3",
            "c6f1c30e-1973-4361-93cb-8064b6385fa5",
            "4e8af2a5-30fe-4f34-9efe-7747149059f1",
            "78d70b9e-cba0-4ba6-a804-2ec1187c73d7",
            "694d1482-3827-4799-b877-28ac7cbc1c63"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 16724,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "6ccdb196-991b-44a6-8b18-9d3d76898f7c",
      "title": "",
      "fullFile": "cypress/integration/test/7_assertions.spec.js",
      "file": "cypress/integration/test/7_assertions.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "93b0398e-41d4-47be-bd3f-82cc4839a726",
          "title": "Assertions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "7883a192-a64d-449d-9c17-1211d3399891",
              "title": "Implicit Assertions",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": ".should() - make an assertion about the current subject",
                  "fullTitle": "Assertions Implicit Assertions .should() - make an assertion about the current subject",
                  "timedOut": null,
                  "duration": 539,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/should\ncy.get('.assertion-table').find('tbody tr:last').should('have.class', 'success').find('td').first() // checking the text of the <td> element in various ways\n.should('have.text', 'Column content').should('contain', 'Column content').should('have.html', 'Column content') // chai-jquery uses \"is()\" to check if element matches selector\n.should('match', 'td') // to match text content against a regular expression\n// first need to invoke jQuery method text()\n// and then match using regular expression\n.invoke('text').should('match', /column content/i); // a better way to check element's text content against a regular expression\n// is to use \"cy.contains\"\n// https://on.cypress.io/contains\ncy.get('.assertion-table').find('tbody tr:last') // finds first <td> element with text content matching regular expression\n.contains('td', /column content/i).should('be.visible'); // for more information about asserting element's text\n// see https://on.cypress.io/using-cypress-faq#How-do-I-get-an-elementÔÇÖs-text-contents",
                  "err": {},
                  "uuid": "5f503ccd-4705-4456-8134-71feef0d4852",
                  "parentUUID": "7883a192-a64d-449d-9c17-1211d3399891",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": ".and() - chain multiple assertions together",
                  "fullTitle": "Assertions Implicit Assertions .and() - chain multiple assertions together",
                  "timedOut": null,
                  "duration": 178,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/and\ncy.get('.assertions-link').should('have.class', 'active').and('have.attr', 'href').and('include', 'cypress.io');",
                  "err": {},
                  "uuid": "a95c5467-0c78-4b13-b025-bcee1eef19b7",
                  "parentUUID": "7883a192-a64d-449d-9c17-1211d3399891",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5f503ccd-4705-4456-8134-71feef0d4852",
                "a95c5467-0c78-4b13-b025-bcee1eef19b7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 717,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "b245ee01-c3f4-457f-8956-16f0673ff9d6",
              "title": "Explicit Assertions",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "expect - make an assertion about a specified subject",
                  "fullTitle": "Assertions Explicit Assertions expect - make an assertion about a specified subject",
                  "timedOut": null,
                  "duration": 148,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// We can use Chai's BDD style assertions\nexpect(true).to.be.true;\nconst o = {\n  foo: 'bar'\n};\nexpect(o).to.equal(o);\nexpect(o).to.deep.equal({\n  foo: 'bar'\n}); // matching text using regular expression\nexpect('FooBar').to.match(/bar$/i);",
                  "err": {},
                  "uuid": "1c9fd02e-05e3-4d9f-bf6c-66c9aa567afc",
                  "parentUUID": "b245ee01-c3f4-457f-8956-16f0673ff9d6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "pass your own callback function to should()",
                  "fullTitle": "Assertions Explicit Assertions pass your own callback function to should()",
                  "timedOut": null,
                  "duration": 142,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Pass a function to should that can have any number\n// of explicit assertions within it.\n// The \".should(cb)\" function will be retried\n// automatically until it passes all your explicit assertions or times out.\ncy.get('.assertions-p').find('p').should($p => {\n  // https://on.cypress.io/$\n  // return an array of texts from all of the p's\n  // @ts-ignore TS6133 unused variable\n  const texts = $p.map((i, el) => Cypress.$(el).text()); // jquery map returns jquery object\n  // and .get() convert this to simple array\n  const paragraphs = texts.get(); // array should have length of 3\n  expect(paragraphs, 'has 3 paragraphs').to.have.length(3); // use second argument to expect(...) to provide clear\n  // message with each assertion\n  expect(paragraphs, 'has expected text in each paragraph').to.deep.eq(['Some text from first p', 'More text from second p', 'And even more text from third p']);\n});",
                  "err": {},
                  "uuid": "8ef03bee-8ce3-4e80-b27b-a93b88b41fc5",
                  "parentUUID": "b245ee01-c3f4-457f-8956-16f0673ff9d6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "finds element by class name regex",
                  "fullTitle": "Assertions Explicit Assertions finds element by class name regex",
                  "timedOut": null,
                  "duration": 132,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.docs-header').find('div') // .should(cb) callback function will be retried\n.should($div => {\n  expect($div).to.have.length(1);\n  const className = $div[0].className;\n  expect(className).to.match(/heading-/);\n}) // .then(cb) callback is not retried,\n// it either passes or fails\n.then($div => {\n  expect($div, 'text content').to.have.text('Introduction');\n});",
                  "err": {},
                  "uuid": "55a074e9-5a00-46e8-a564-c8fbd9eec828",
                  "parentUUID": "b245ee01-c3f4-457f-8956-16f0673ff9d6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can throw any error",
                  "fullTitle": "Assertions Explicit Assertions can throw any error",
                  "timedOut": null,
                  "duration": 141,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.docs-header').find('div').should($div => {\n  if ($div.length !== 1) {\n    // you can throw your own errors\n    throw new Error('Did not find 1 element');\n  }\n  const className = $div[0].className;\n  if (!className.match(/heading-/)) {\n    throw new Error(`Could not find class \"heading-\" in ${className}`);\n  }\n});",
                  "err": {},
                  "uuid": "bd209224-26db-4685-b666-d3c8c0c55bf2",
                  "parentUUID": "b245ee01-c3f4-457f-8956-16f0673ff9d6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "matches unknown text between two elements",
                  "fullTitle": "Assertions Explicit Assertions matches unknown text between two elements",
                  "timedOut": null,
                  "duration": 167,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "/**\n * Text from the first element.\n * @type {string}\n*/\nlet text;\n/**\n * Normalizes passed text,\n * useful before comparing text with spaces and different capitalization.\n * @param {string} s Text to normalize\n*/\nconst normalizeText = s => s.replace(/\\s/g, '').toLowerCase();\ncy.get('.two-elements').find('.first').then($first => {\n  // save text from the first element\n  text = normalizeText($first.text());\n});\ncy.get('.two-elements').find('.second').should($div => {\n  // we can massage text before comparing\n  const secondText = normalizeText($div.text());\n  expect(secondText, 'second text').to.equal(text);\n});",
                  "err": {},
                  "uuid": "d4eba939-2e1f-4808-9f9a-390912e60471",
                  "parentUUID": "b245ee01-c3f4-457f-8956-16f0673ff9d6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "assert - assert shape of an object",
                  "fullTitle": "Assertions Explicit Assertions assert - assert shape of an object",
                  "timedOut": null,
                  "duration": 164,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const person = {\n  name: 'Joe',\n  age: 20\n};\nassert.isObject(person, 'value is object');",
                  "err": {},
                  "uuid": "215611a9-5c73-4bd3-b140-06e3fd839972",
                  "parentUUID": "b245ee01-c3f4-457f-8956-16f0673ff9d6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "retries the should callback until assertions pass",
                  "fullTitle": "Assertions Explicit Assertions retries the should callback until assertions pass",
                  "timedOut": null,
                  "duration": 1616,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('#random-number').should($div => {\n  const n = parseFloat($div.text());\n  expect(n).to.be.gte(1).and.be.lte(10);\n});",
                  "err": {},
                  "uuid": "fa8e9616-de6f-4dfb-818f-2805921e0861",
                  "parentUUID": "b245ee01-c3f4-457f-8956-16f0673ff9d6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1c9fd02e-05e3-4d9f-bf6c-66c9aa567afc",
                "8ef03bee-8ce3-4e80-b27b-a93b88b41fc5",
                "55a074e9-5a00-46e8-a564-c8fbd9eec828",
                "bd209224-26db-4685-b666-d3c8c0c55bf2",
                "d4eba939-2e1f-4808-9f9a-390912e60471",
                "215611a9-5c73-4bd3-b140-06e3fd839972",
                "fa8e9616-de6f-4dfb-818f-2805921e0861"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2510,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "2a1fcd8d-e43e-496c-a1ac-4c077ffeb322",
      "title": "",
      "fullFile": "cypress/integration/test/1_browser_actions.spec.js",
      "file": "cypress/integration/test/1_browser_actions.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5c2a2aa7-9bce-465e-9f10-5665e00df845",
          "title": "Browser actions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should load correct url",
              "fullTitle": "Browser actions should load correct url",
              "timedOut": null,
              "duration": 204,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// specify timeout locally\ncy.visit('http://example.com/', {\n  timeout: 10000\n});",
              "err": {},
              "uuid": "20092f34-6f32-4dd3-94ef-89f085d4937d",
              "parentUUID": "5c2a2aa7-9bce-465e-9f10-5665e00df845",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should check correct url",
              "fullTitle": "Browser actions should check correct url",
              "timedOut": null,
              "duration": 40,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.url().should('include', 'example.com');",
              "err": {},
              "uuid": "c771b8bd-4f25-45e2-807b-ced13d3be70d",
              "parentUUID": "5c2a2aa7-9bce-465e-9f10-5665e00df845",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should check for correct & visible element on the page",
              "fullTitle": "Browser actions should check for correct & visible element on the page",
              "timedOut": null,
              "duration": 28,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('body > :nth-child(1) > :nth-child(2)').should('be.visible');",
              "err": {},
              "uuid": "6b2c212a-80cc-457c-b97e-1f5f343831dc",
              "parentUUID": "5c2a2aa7-9bce-465e-9f10-5665e00df845",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should check for correct & visible element on the page",
              "fullTitle": "Browser actions should check for correct & visible element on the page",
              "timedOut": null,
              "duration": 39,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1').should('be.visible');",
              "err": {},
              "uuid": "1815f4fa-e2a5-4a16-af4e-e244ae6b5546",
              "parentUUID": "5c2a2aa7-9bce-465e-9f10-5665e00df845",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should wait for 3 seconds",
              "fullTitle": "Browser actions should wait for 3 seconds",
              "timedOut": null,
              "duration": 3019,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(3000);",
              "err": {},
              "uuid": "725595ab-1efb-47d0-9e82-2a9dacf91c01",
              "parentUUID": "5c2a2aa7-9bce-465e-9f10-5665e00df845",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should pasue the execution",
              "fullTitle": "Browser actions should pasue the execution",
              "timedOut": null,
              "duration": 20,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.pause();",
              "err": {},
              "uuid": "cca496d0-64bb-43c9-9825-2c0809a86e6f",
              "parentUUID": "5c2a2aa7-9bce-465e-9f10-5665e00df845",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "20092f34-6f32-4dd3-94ef-89f085d4937d",
            "c771b8bd-4f25-45e2-807b-ced13d3be70d",
            "6b2c212a-80cc-457c-b97e-1f5f343831dc",
            "1815f4fa-e2a5-4a16-af4e-e244ae6b5546",
            "725595ab-1efb-47d0-9e82-2a9dacf91c01",
            "cca496d0-64bb-43c9-9825-2c0809a86e6f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3350,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/results",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}
